slidig window pattern
1. it asks for contiguous subarray and all(arr, string/sunstr)
2. it will give k window size
3. lagest, max, mini dega 
4. sometimes window size nikalna hota hoga - variable size window
two types of window -
fixed window - when k is given
variable window - ask k what is k? window size can be 5 6 7 acc to quest like largest sum and all
man lo sum de rkha hai and then u have to find window size and might be ask hua h largest window size
jiska sum 5 ho or small window size. so is tarah se variable window k size pe questns hote hai


1. In fixed, we are maintaining k and then slide krte h and maintain krte h ans
2. in variable, we dont know k but we know condition, so frst meet the condition like sum
shoule be equal or greater. if meet then store the ans then as k inc sum krega if we move right
so we should decrease left pointer until k meet na kr le fr se condition
see below how left and right pointer are maintained
total = left = right = 0
res = len(nums) + 1
while right < len(nums):
    total += nums[right]
    while total >= target:
        res = min(res, right-left+1)
        total -= nums[left]
        left += 1
  right += 1


last ques - permutations in a string(hard)

in sliding variable window, frstly we expan our window till we meet condition then
we start decreasing which made our window invalid [check longest k unique substring]
and jaise h valid hte h window turnt expand krne lagte h
then again start inc 
now come to point where we can aply sliding
1. if larger window is valid[think longest k unique substring] then smaller will also be valid
2. if smaller window is invalid, then larger window is invalid

DONT MAKE ASSUMPTION THAT SUBARRY PROBLEMS CAN EASILY BE SOLVED USING SLIDING window
as per above rules, subarray sum equals k cant be done using sliding window
because take example , k =2 [1,1,1,-1] , here when we reach 3 we think ok this is invalid
but but next elem -1 will make this innvalid...so smaller window invalid can make larger window
invalid so here ye scene h..if positive numbers hte srf then yes we can solve using sliding
window

ITS VERY IMP TO LOOK AT CONSTRAINTS ALSO